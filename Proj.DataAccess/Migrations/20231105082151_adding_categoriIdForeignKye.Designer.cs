// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proj.DataAccess.Data;

#nullable disable

namespace Proj.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231105082151_adding_categoriIdForeignKye")]
    partial class adding_categoriIdForeignKye
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proj.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            DisplayOrder = 1,
                            Name = "Mobile"
                        },
                        new
                        {
                            CategoryId = 2,
                            DisplayOrder = 2,
                            Name = "Fruites"
                        },
                        new
                        {
                            CategoryId = 3,
                            DisplayOrder = 2,
                            Name = "Laptops"
                        },
                        new
                        {
                            CategoryId = 4,
                            DisplayOrder = 2,
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = 5,
                            DisplayOrder = 2,
                            Name = "Dry Fruites"
                        },
                        new
                        {
                            CategoryId = 6,
                            DisplayOrder = 2,
                            Name = "Pots"
                        },
                        new
                        {
                            CategoryId = 7,
                            DisplayOrder = 2,
                            Name = "Vegitabes"
                        });
                });

            modelBuilder.Entity("Proj.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Author_1",
                            CategoryId = 16,
                            Discription = "The Best Book Ever 1",
                            ISBN = "F0T00000001",
                            ListPrice = 89.0,
                            Price = 80.0,
                            Price100 = 80.0,
                            Price50 = 75.0,
                            Title = "Book_1"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Author_2",
                            CategoryId = 16,
                            Discription = "The Best Book Ever 2",
                            ISBN = "F0T00000002",
                            ListPrice = 99.0,
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0,
                            Title = "Book_2"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Author_3",
                            CategoryId = 16,
                            Discription = "The Best Book Ever 3",
                            ISBN = "F0T00000003",
                            ListPrice = 99.0,
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0,
                            Title = "Book_3"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Author_4",
                            CategoryId = 16,
                            Discription = "The Best Book Ever 4",
                            ISBN = "F0T00000003",
                            ListPrice = 99.0,
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0,
                            Title = "Book_4"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Author_5",
                            CategoryId = 16,
                            Discription = "The Best Book Ever 5",
                            ISBN = "F0T00000005",
                            ListPrice = 99.0,
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0,
                            Title = "Book_5"
                        });
                });

            modelBuilder.Entity("Proj.Models.Product", b =>
                {
                    b.HasOne("Proj.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
